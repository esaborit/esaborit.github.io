<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog dise√±ado con Laravel on ESC</title>
    <link>https://esaborit.github.io/docs/blog_laravel/</link>
    <description>Recent content in Blog dise√±ado con Laravel on ESC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <copyright>&amp;copy; 2021 Enrique Saborit Crespo</copyright>
    <lastBuildDate>Fri, 16 Oct 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://esaborit.github.io/docs/blog_laravel/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creacion del proyecto y dise√±o de la base de datos del blog</title>
      <link>https://esaborit.github.io/docs/blog_laravel/creacion_proyecto_diseno_bbdd/</link>
      <pubDate>Thu, 28 Jan 2021 23:09:52 +0100</pubDate>
      
      <guid>https://esaborit.github.io/docs/blog_laravel/creacion_proyecto_diseno_bbdd/</guid>
      <description>Creaci√≥n del proyecto La pieza fundamental para construir el proyecto es tener claro la estructura de la base de datos del blog.
Diagrama EER
  Una vez que tengo planificada la base de datos para crear el proyecto con laravel debo situarme en el directorio /var/www/laravel/ dentro del cual creo todos los proyectos.
enrique@enrique-server:$ cd /var/www/laravel/  Creo un proyecto de nombre blog_laravel con jetstream y livewire.
enrique@enrique-server:/var/www/laravel$ laravel new blog_laravel --jet | | | |,---.</description>
    </item>
    
    <item>
      <title>Inserci√≥n de datos de prueba con seeders y factories</title>
      <link>https://esaborit.github.io/docs/blog_laravel/insertar_datos_de_prueba_con_seeders_y_factories/</link>
      <pubDate>Thu, 28 Jan 2021 22:39:33 +0100</pubDate>
      
      <guid>https://esaborit.github.io/docs/blog_laravel/insertar_datos_de_prueba_con_seeders_y_factories/</guid>
      <description>Inserci√≥n de datos de prueba en la base de datos Voy a crear un factory para cada una de las entidades/tablas de mi base de datos, salvo para User que ya se creo con el proyecto.
UserFactory.php
&amp;lt;?php namespace Database\Factories; use App\Models\User; use Illuminate\Database\Eloquent\Factories\Factory; use Illuminate\Support\Str; class UserFactory extends Factory { /** * The name of the factory&#39;s corresponding model. * * @var string */ protected $model = User::class; /** * Define the model&#39;s default state.</description>
    </item>
    
    <item>
      <title>Crear un men√∫ responsive con Tailwind y Alpine</title>
      <link>https://esaborit.github.io/docs/blog_laravel/crear_un_menu_responsive_con_tailwind_y_alpine/</link>
      <pubDate>Thu, 28 Jan 2021 22:22:34 +0100</pubDate>
      
      <guid>https://esaborit.github.io/docs/blog_laravel/crear_un_menu_responsive_con_tailwind_y_alpine/</guid>
      <description>Men√∫ responsive. El men√∫ de navegaci√≥n lo voy a incluir dentro de un componente de livewire
enrique@enrique-server:/var/www/laravel/blog_laravel$ php artisan make:livewire navigation COMPONENT CREATED ü§ô CLASS: app/Http/Livewire/Navigation.php VIEW: resources/views/livewire/navigation.blade.php _._ / /o\ \ || () () __ |_\ /_| || || \\// /_\ \\ // || |~~ /_\ |`|`| || || \/ \\_ \^/ || || \\_ Congratulations, you&#39;ve created your first Livewire component! üéâüéâüéâ Would you like to show some love by starring the repo? (yes/no) [no]: &amp;gt; no I understand, but am not going to pretend I&#39;m not sad about it.</description>
    </item>
    
    <item>
      <title>Crear un listado de post en la p√°gina principal</title>
      <link>https://esaborit.github.io/docs/blog_laravel/listado_de_posts_en_la_pagina_principal/</link>
      <pubDate>Thu, 28 Jan 2021 22:22:33 +0100</pubDate>
      
      <guid>https://esaborit.github.io/docs/blog_laravel/listado_de_posts_en_la_pagina_principal/</guid>
      <description>Listado de posts Voy a mostrar un listado con los pos almacenados en la base de datos, para ello debo empezar creando un controlador en el que recoger√© una variable con los post y desde donde llamar a una vista para mostrarlos. Creo un controlador llamado PostController.
enrique@enrique-server:/var/www/laravel/blog_laravel$ php artisan make:controller PostController  entro en la clase app/Http/Controllers/PostController.php y la edito como he dicho anteriormente
PostController.php
&amp;lt;?php namespace App\Http\Controllers; use App\Models\Post; use Illuminate\Http\Request; class PostController extends Controller { public function index() { $posts = Post::where(&#39;status&#39;, 2)-&amp;gt;get(); // Filtro para que solo recoga los publicados return view(&#39;posts.</description>
    </item>
    
    <item>
      <title>Mostrando y filtrando posts</title>
      <link>https://esaborit.github.io/docs/blog_laravel/mostrando_y_filtrando_posts/</link>
      <pubDate>Thu, 28 Jan 2021 22:21:33 +0100</pubDate>
      
      <guid>https://esaborit.github.io/docs/blog_laravel/mostrando_y_filtrando_posts/</guid>
      <description>Mostrando el detalle de un post Creo una ruta en web.php para mostrar el detalle de un post.
web.php
Route::get(&#39;posts/{post}&#39;, [PostController::class, &#39;show&#39;])-&amp;gt;name(&#39;posts.show&#39;);  Creo en m√©todo show en el controllador PostController.php al que le paso como par√°metro un objeto post. Dentro de el recupero los post que pertenecen a la misma categor√≠a que el en la variable $similares y se los paso junto con la variable $post a la vista posts.show.
PostController.php
 public function show(Post $post) { $similares = Post::where(&#39;category_id&#39;, $post-&amp;gt;category_id) -&amp;gt;where(&#39;status&#39;, 2) -&amp;gt;where(&#39;id&#39;, &#39;!</description>
    </item>
    
    <item>
      <title>Creando el backend del blog </title>
      <link>https://esaborit.github.io/docs/blog_laravel/adminlte_en_el_proyecto/</link>
      <pubDate>Thu, 28 Jan 2021 22:20:33 +0100</pubDate>
      
      <guid>https://esaborit.github.io/docs/blog_laravel/adminlte_en_el_proyecto/</guid>
      <description>Integrando AdminLTE en el proyecto Para la gesti√≥n de la parte administrativa voy a usar el paquete AdminLTE 3
Voy a generar una url llamada admin que utilizar√© para desarrollar la parte de administraci√≥n del blog. Esta url no la voy a declarar en el fichero web.php sino que creo uno nuevo llamado routes/admin.php dentro del cual ir√© definiendo las rutas de administrador. Para que laravel reconozca al archivo admin.php como administrador de rutas debo especific√°rselo dentro del m√©todo boot del archivo app/Providers/RouteServiceProvider.</description>
    </item>
    
    <item>
      <title>Creando el crud de categor√≠as. </title>
      <link>https://esaborit.github.io/docs/blog_laravel/crud_categorias/</link>
      <pubDate>Thu, 28 Jan 2021 22:19:33 +0100</pubDate>
      
      <guid>https://esaborit.github.io/docs/blog_laravel/crud_categorias/</guid>
      <description>Creando un crud para las categor√≠as del blog Genero en admin.php una ruta de tipo resources que me genere las rutas para el crud de las categor√≠as. Antes creo un controlador para categor√≠as que me genere ya los 7 m√©todos.
enrique@enrique-server:/var/www/laravel/blog_laravel$ php artisan make:controller Admin/CategoryController -r Controller created successfully.  CategoryController.php
&amp;lt;?php namespace App\Http\Controllers\Admin; use App\Http\Controllers\Controller; use Illuminate\Http\Request; class CategoryController extends Controller { /** * Display a listing of the resource. * * @return \Illuminate\Http\Response */ public function index() { // } /** * Show the form for creating a new resource.</description>
    </item>
    
    <item>
      <title>Creando el crud de etiquetas. </title>
      <link>https://esaborit.github.io/docs/blog_laravel/crud_etiquetas/</link>
      <pubDate>Thu, 28 Jan 2021 22:18:33 +0100</pubDate>
      
      <guid>https://esaborit.github.io/docs/blog_laravel/crud_etiquetas/</guid>
      <description>Creando un crud para las etiquetas del blog Sigo los mismos pasos que para las categorias.
Desde la consola de comandos y situado dentro del proyecto creo el controlador con sus 7 m√©todos para administrar las etiquetas desde el backend.
enrique@enrique-server:/var/www/laravel/blog_laravel$ php artisan make:controler Admin/TagController -r Controller created successfully.  Edito el controlador reci√©n creado, sustituyendo los par√°metros $id por objetos $tag y a√±adiendo las vistas a los m√©todos index, create, update.
TagController.php
&amp;lt;?php namespace App\Http\Controllers\Admin; use App\Http\Controllers\Controller; use App\Models\Tag; use Illuminate\Http\Request; class TagController extends Controller { /** * Display a listing of the resource.</description>
    </item>
    
    <item>
      <title>Creando el crud de posts. </title>
      <link>https://esaborit.github.io/docs/blog_laravel/crud_post/</link>
      <pubDate>Thu, 28 Jan 2021 22:17:33 +0100</pubDate>
      
      <guid>https://esaborit.github.io/docs/blog_laravel/crud_post/</guid>
      <description>Creando un crud para los post del blog Creo el controlador con los siete m√©todos
enrique@enrique-server:/var/www/laravel/blog_laravel$ php artisan make:controller Admin/PostController -r Controller created successfully.  Lo modifico para recibir objetos post y las vistas a los m√©todos correspondientes.
&amp;lt;?php namespace App\Http\Controllers\Admin; use App\Http\Controllers\Controller; use App\Models\Post; use Illuminate\Http\Request; class PostController extends Controller { /** * Display a listing of the resource. * * @return \Illuminate\Http\Response */ public function index() { return view(&#39;admin.posts.index&#39;); } /** * Show the form for creating a new resource.</description>
    </item>
    
  </channel>
</rss>